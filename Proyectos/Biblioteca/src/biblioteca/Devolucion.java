/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioteca;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anama
 */
public class Devolucion extends javax.swing.JFrame {

    /**
     * Creates new form Devolucion
     */
    String idu,idp;
            boolean validaDias=true,validaRefrendos=true,validaMulta=true;

    int id_usuario,id_presta,dias,contador_dias=0,refrendos;
    Date prestamo,devolucion, hoy=new Date();
    double multa=0;
    boolean estado;
    public Devolucion() {
        initComponents();
        tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        id_user = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        id_prestamo = new javax.swing.JTextField();
        devolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/libros96.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("El Futuro de Mexico DEVOLUCION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jLabel5.setText("Ingrese el ID de usuario");

        id_user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                id_userKeyTyped(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(204, 255, 255));
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingrese el id del prestamo que desa entregar");

        devolver.setBackground(new java.awt.Color(204, 255, 255));
        devolver.setText("Entregar");
        devolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID_prestamo", "ID_Usuario", "Multa", "ID_Libro", "Estatus", "Refrendos", "Fecha de Prestamo", "Fecha de entrega"
            }
        ));
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setPreferredWidth(350);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(4).setPreferredWidth(200);
            tabla.getColumnModel().getColumn(5).setPreferredWidth(250);
            tabla.getColumnModel().getColumn(6).setPreferredWidth(450);
            tabla.getColumnModel().getColumn(7).setPreferredWidth(450);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 314, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id_user)
                            .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(282, 282, 282))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(235, 235, 235))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(devolver, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(id_prestamo))
                        .addGap(295, 295, 295))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id_user, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(id_prestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(devolver, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void id_userKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_id_userKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_id_userKeyTyped

    private void devolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverActionPerformed
        // TODO add your handling code here:
        int id_usuario=Integer.parseInt(id_user.getText());
        Excepciones excepcion = new Excepciones();
        boolean validacionUSER= true,val=true,validacionPRESTAMO=true;
        boolean validaDias=true,validaRefrendos=true,validaMulta=true,validaSi=true;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";

        try{

            idp=id_prestamo.getText();
            excepcion.campoVacio(idp);
            if(idp.matches("^[A-Za-z]*$")){
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
                validacionPRESTAMO=false;

            }
            id_presta=Integer.parseInt(idp);
        }

        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No puede dejar campos vacios");
            val=false;
        }

        try{
            Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD);

            
             String querry = "SELECT ID_USUARIO FROM USUARIO WHERE ID_USUARIO = "+id_usuario+"";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry);
            
            if(rs.next()){
                 JOptionPane.showMessageDialog(null, "Usuario encontrado!");
                 id_prestamo.setEnabled(true);

            }
            else{
                validacionUSER=false;
                 JOptionPane.showMessageDialog(null, "No se encontro el usuario");
                id_prestamo.setEnabled(false);


            }
                
            
            
            
            if(validacionUSER ==true && val==true){

                tabla(id_usuario);

                String querry2 = "SELECT ID_PRESTAMO FROM PRESTAMO WHERE ID_PRESTAMO = "+id_presta+"";
                Statement stsS = conn.createStatement();
                ResultSet r = stsS.executeQuery(querry2);

                if(r.next()){
                    JOptionPane.showMessageDialog(null, "Prestamo encontrado!");

                }
                else{
                    validacionPRESTAMO=false;
                    JOptionPane.showMessageDialog(null, "No se encontro el Prestamo");
                }

                String q="SELECT * FROM PRESTAMO WHERE ID_PRESTAMO= "+id_usuario+"";
                Statement stsq = conn.createStatement();
                ResultSet rr = stsS.executeQuery(q);
                tabla(id_usuario);
                ResultSet rss = stsS.executeQuery("SELECT * FROM PRESTAMO WHERE ID_PRESTAMO = "+id_presta+"");
                while(rss.next()){
                    prestamo= rss.getDate("FECHA_PRESTAMO");
                    devolucion=rss.getDate("FECHA_ENTREGA");
                    refrendos=rss.getInt("REFRENDOS");
                    multa=rss.getDouble("MULTA");
                    estado=rss.getBoolean("ESTATUS");
                    System.out.println("Multa_ "+multa);
                    System.out.println("Devolucion: "+devolucion);
                    
                    dias = (int) ((devolucion.getTime()-prestamo.getTime())/86400000);
                }
                
                if(devolucion!= hoy && hoy.compareTo(devolucion)>0){
                    
                          validaSi=false;
                          dias = (int) ((hoy.getTime()-devolucion.getTime())/86400000);
                          multa=dias*5;
                           String refrendo="UPDATE PRESTAMO SET MULTA= "+multa+"  WHERE ID_PRESTAMO= "+id_presta;
                           stsS.executeUpdate(refrendo);
                          

                          JOptionPane.showMessageDialog(null, "No puedes devolver el libro hasta que pagues tu adeudo " );

                           JOptionPane.showMessageDialog(null, "Multa almacenada! " );
                           tabla();
                    
                    
                }

                if(multa!=0){
                    validaMulta=false;
                          JOptionPane.showMessageDialog(null, "No puedes devolver el libro hasta que pagues tu adeudo " );

                }

                if(validacionPRESTAMO==true && val==true && validaDias==true && validaRefrendos==true &&validaMulta==true && validacionPRESTAMO==true){
                    //nueva fecha de prestamo
                    estado=false;
                    String refrendo="UPDATE PRESTAMO SET ESTATUS = "+estado+"  WHERE ID_PRESTAMO= "+id_presta;
                    stsS.executeUpdate(refrendo);
                    JOptionPane.showMessageDialog(null, "Devolucion realizada con exito! " );
                    tabla();

                }

            }

        }
        catch (SQLException ex) {
            System.out.println("No se establecio conexion pa update: ");
            System.out.print(ex);

        }

    }//GEN-LAST:event_devolverActionPerformed
public void tabla(int id_usuario){
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);

        int conta = 0;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";
        try(Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD)){
            String querry="SELECT * FROM PRESTAMO WHERE ID_USUARIO = "+id_usuario+"";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry);
            DefaultTableModel model= (DefaultTableModel)tabla.getModel();

            while(rs.next()){
                Vector v=new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
               
                model.addRow(v);
                conta++;

            }

        }catch (SQLException ex) {
            System.out.println(ex.getNextException());
            System.out.println("No se establecio conexion");
            System.out.println(ex);
        }
    }
     
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        int id_usuario=Integer.parseInt(id_user.getText());
        Excepciones excepcion = new Excepciones();
        boolean validacionUSER= true,val=true,validacionPRESTAMO=true;
        boolean validaDias=true,validaRefrendos=true,validaMulta=true;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";
        boolean opcion = false,opcion2=false;
        PreparedStatement ps = null;
        refrendos=0;
        //captura el id del usuario
        try{
            buscar.setEnabled(true);
            idu=id_user.getText();
            excepcion.campoVacio(idu);
            id_usuario=Integer.parseInt(idu);
            if(idu.matches("^[A-Za-z]*$")){
                JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
                validacionUSER=false;

            }
        }
        catch(NumberFormatException e){

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No puede dejar campos vacios");
            val=false;
        }

        //prueba la conexion

        try{
            Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD);

            String querry = "SELECT ID_USUARIO FROM USUARIO WHERE ID_USUARIO = "+id_usuario+"";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry);

            if(rs.next()){
                JOptionPane.showMessageDialog(null, "Usuario encontrado!");
                id_prestamo.setEnabled(true);
                devolver.setEnabled(true);

            }
            else{
                validacionUSER=false;
                JOptionPane.showMessageDialog(null, "No se encontro el usuario");
                id_prestamo.setEnabled(false);
                devolver.setEnabled(false);

            }

            tabla(id_usuario);

            System.out.println("Proceso terminado");
            sts.close();
            conn.close();
        }

        catch (SQLException ex) {
            System.out.println("No se establecio conexion pa update: ");
            System.out.print(ex);

        }
    }//GEN-LAST:event_buscarActionPerformed
public void tabla(){
          DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);

        int conta = 0;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";
        try(Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD)){
            String querry="SELECT * FROM PRESTAMO ";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry);
            DefaultTableModel model= (DefaultTableModel)tabla.getModel();

            while(rs.next()){
                Vector v=new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
               
                model.addRow(v);
                conta++;

            }

        }catch (SQLException ex) {
            System.out.println(ex.getNextException());
            System.out.println("No se establecio conexion");
            System.out.println(ex);
        }
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Devolucion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JButton devolver;
    private javax.swing.JTextField id_prestamo;
    private javax.swing.JTextField id_user;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
