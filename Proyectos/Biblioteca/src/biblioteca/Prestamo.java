/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biblioteca;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author anama
 */
public class Prestamo extends javax.swing.JFrame {

    /**
     * Creates new form Prestamo
     */
    int id_usuario, id_libro,contador=0,no_prestamos=0,no_ejemplares=0,id_user,compara_libro=0,id_u;
    boolean estado,status;
    int prestamos=0,tipoUser,id_genero;
    String id_UserS;
    String text = "";
    public Prestamo() {
        initComponents();
        tabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        idu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        idl = new javax.swing.JTextField();
        registrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/libros96.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("El Futuro de Mexico PRESTAMOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(309, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "ID Autor", "ID_Genero", "ID_Editorial", "ID_Pais", "ISBN", "Edicion", "Fecha de publicacion", "No.Paginas", "Idioma", "Descripcion", "Ejemplares"
            }
        ));
        jScrollPane2.setViewportView(tabla);

        jLabel5.setText("Ingrese el ID de usuario");

        jLabel6.setText("Ingrese el ID del libro");

        registrar.setBackground(new java.awt.Color(204, 255, 255));
        registrar.setText("Registrar");
        registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(205, 205, 205)
                                .addComponent(idu, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(61, 61, 61)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(registrar)
                                    .addComponent(idl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idu, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(registrar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarActionPerformed
        // TODO add your handling code here:
        GeneradorPDFAdm gPDF = new GeneradorPDFAdm();
        Excepciones excepcion = new Excepciones();
        String iduString,idLibro;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";
        boolean validacionUSER = true,validacionLIBRO=true,validacion=true;
       
        //  Generar la fecha de prestamo
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        System.out.println("PRIMERO");
        try{
            String idUserS = idu.getText();
            excepcion.campoVacio(idUserS);
            id_usuario = Integer.parseInt(idUserS);
            idLibro=idl.getText();
            excepcion.campoVacio(idLibro);
            id_libro = Integer.parseInt(idLibro);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No puede dejar campos vacios");
            validacion = false;

        }
        System.out.println("SEGUNDO");
        try{    
            Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD);
            String querry1 = "SELECT ID_USUARIO, ID_TIPOUSUARIO FROM USUARIO WHERE ID_USUARIO = "+id_usuario+"";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry1);
            if(rs.next()){
                id_user = rs.getInt("ID_USUARIO");
                tipoUser=rs.getInt("ID_TIPOUSUARIO");  
            }
            String querry = "SELECT ID_USUARIO FROM USUARIO WHERE ID_USUARIO = "+id_user+"";
            Statement stsS = conn.createStatement();
            ResultSet rss = sts.executeQuery(querry);
            if(rss.next()){
                 JOptionPane.showMessageDialog(null, "Usuario encontrado!");
            }
            else{
                validacionLIBRO = false;
                 JOptionPane.showMessageDialog(null, "No se encontro el Usuario");
            }
            String querry2 = "SELECT ID_LIBRO FROM LIBRO WHERE ID_LIBRO = "+id_libro+"";
            Statement stsSS = conn.createStatement();
            ResultSet rsS = sts.executeQuery(querry2);
            if(rsS.next()){
                 JOptionPane.showMessageDialog(null, "Libro encontrado!");
            }
            else{
                validacionLIBRO = false;
                 JOptionPane.showMessageDialog(null, "No se encontro el libro");
            }
            
            String querry3 = "SELECT ESTATUS FROM PRESTAMO WHERE ID_USUARIO = "+id_usuario+"";
            Statement ss = conn.createStatement();
            ResultSet rrr = sts.executeQuery(querry3);
            
            if(tipoUser == 1){
                while(rrr.next()){
                    estado=rrr.getBoolean("ESTATUS");
                    if(estado==true){
                     prestamos++;
                    }
                    System.out.println("EL TOTAL DE PRESTAMOS DE ESTE USER ES DE : "+prestamos);
                }
            }
            if(tipoUser==2){
                while(rrr.next()){
                    estado=rrr.getBoolean("ESTATUS");
                    if(estado==true){
                        prestamos++;

                    }
                    System.out.println("EL TOTAL DE PRESTAMOS DE ESTE USER ES DE : "+prestamos);
                }
            }
            String querry5 = "SELECT ID_GENERO FROM LIBRO WHERE ID_LIBRO = "+id_libro+"";
            Statement ssS = conn.createStatement();
            ResultSet rrrR = sts.executeQuery(querry5);
            
            while(rrrR.next()){
                id_genero=rrrR.getInt("ID_GENERO");
            }
            if(validacionUSER==true && validacionLIBRO==true && validacion==true){
            //  Seleccionar los ejemplares del libro
            String q="SELECT NO_EJEMPLARES FROM LIBRO WHERE ID_LIBRO = "+id_libro+"";
            Statement stsq = conn.createStatement();
            ResultSet r = sts.executeQuery(q);
             
            while(r.next()){
                no_ejemplares=r.getInt("NO_EJEMPLARES");
                System.out.println("El numero de ejemplares es: "+no_ejemplares);
            }
            if(no_ejemplares>0){
                int refrendos=0;
                double multa=0;
                status=true;
                if(tipoUser==2){
                    Date fecha_prestamo = new Date();
                    //Sumar dias a la fecha
                    Date fecha_entrega = new Date();
                    Calendar cal = Calendar.getInstance();
                    cal.setTime(fecha_prestamo);
                    cal.add(Calendar.DATE, 5);
                    fecha_entrega = cal.getTime();
                    if(prestamos<5){
                        String registro="INSERT INTO PRESTAMO (ID_USUARIO,MULTA,ID_LIBRO,ESTATUS,REFRENDOS,FECHA_PRESTAMO,FECHA_ENTREGA,ID_GENERO) VALUES ("+id_usuario+", "+multa+","+id_libro+", "+status+", "+refrendos+",'"+dateFormat.format(fecha_prestamo)+"','"+dateFormat.format(fecha_entrega)+"',"+id_genero+")";
                        sts.executeUpdate(registro);
                        JOptionPane.showMessageDialog(null, "Registro almacenado");
                        no_ejemplares--;
                        String actualizacion="UPDATE LIBRO SET NO_EJEMPLARES= "+no_ejemplares+" WHERE ID_LIBRO ="+id_libro+"";
                        sts.executeUpdate(actualizacion);
                        System.out.println("Ejemplares actuales: "+no_ejemplares);
                        JOptionPane.showMessageDialog(null, "Baja de ejemplares modificada!  " );
                    }else{
                        JOptionPane.showMessageDialog(null, "Ya no puedes realizar mas prestamos, has excedido los 5" );
                    }
                }
                if(tipoUser==1){
                    Date fecha_prestamo = new Date();
                    //Sumar dias a la fecha
                    Date fecha_entrega = new Date();
                    Calendar cal = Calendar.getInstance();
                    cal.setTime(fecha_prestamo);
                    cal.add(Calendar.DATE, 3);
                    fecha_entrega = cal.getTime();
                    if(prestamos<3){
                        status=true;
                        String registro="INSERT INTO PRESTAMO (ID_USUARIO,MULTA,ID_LIBRO,ESTATUS,REFRENDOS,FECHA_PRESTAMO,FECHA_ENTREGA,ID_GENERO) VALUES ("+id_usuario+", "+multa+","+id_libro+", "+status+", "+refrendos+",'"+dateFormat.format(fecha_prestamo)+"','"+dateFormat.format(fecha_entrega)+"',"+id_genero+")";
                        sts.executeUpdate(registro);
                        JOptionPane.showMessageDialog(null, "Registro almacenado");
                        no_ejemplares--;
                        String actualizacion="UPDATE LIBRO SET NO_EJEMPLARES= "+no_ejemplares+" WHERE ID_LIBRO ="+id_libro+"";
                        sts.executeUpdate(actualizacion);
                        System.out.println("Ejemplares actuales: "+no_ejemplares);
                        JOptionPane.showMessageDialog(null, "Baja de ejemplares modificada!  " );
                    }else{
                        JOptionPane.showMessageDialog(null, "Ya no puedes realizar mas prestamos, has excedido los 3" );
                    }
                }
            }
             //if no ejemplares
            if(no_ejemplares==0){
                JOptionPane.showMessageDialog(null, "Ya no hay stock del libro seleccionado, por favor seleccione otro" );

            }
                System.out.println("TERCERO");
            tabla();
            }
            sts.close();
            conn.close();
        }catch(SQLException e) {
            System.out.println("No se establecio conexion  ");
            System.out.print(e);
        }
    }//GEN-LAST:event_registrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prestamo().setVisible(true);
            }
        });
    }
public void tabla(){
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);
        int conta = 0;
        String url = "jdbc:derby://localhost:1527/Biblioteca_Proyecto";
        String usuarioBD = "root";
        String passwordBD = "12345";
        try(Connection conn = DriverManager.getConnection(url,usuarioBD,passwordBD)){
            String querry="select * from libro";
            Statement sts = conn.createStatement();
            ResultSet rs = sts.executeQuery(querry);
            DefaultTableModel model = (DefaultTableModel)tabla.getModel();

            while(rs.next()){
                Vector v=new Vector();
                v.add(rs.getString(1));
                    text += rs.getString(1)+"\t";
                v.add(rs.getString(2));
                    text += rs.getString(2)+"\t";
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                    text += rs.getString(7)+"\t";
                v.add(rs.getString(8));
                    text += rs.getString(8)+"\t";
                v.add(rs.getString(9));
                    text += rs.getString(9)+"\t";
                v.add(rs.getString(10));
                    text += rs.getString(10)+"\t";
                v.add(rs.getString(11));
                    text += rs.getString(11)+"\t";
                v.add(rs.getString(12));
                    text += rs.getString(12)+"\t";
                v.add(rs.getString(13));
                    text += rs.getString(13)+"\t";

                model.addRow(v);
                conta++;
            }
        }catch (SQLException ex) {
            System.out.println(ex.getNextException());
            System.out.println("No se establecio conexion");
            System.out.println(ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idl;
    private javax.swing.JTextField idu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton registrar;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
